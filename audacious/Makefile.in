# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = audacious$(EXEEXT)
subdir = audacious
DIST_COMMON = $(beepinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/audacious.desktop.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/codeset.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/glibc21.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intdiv0.m4 \
	$(top_srcdir)/m4/inttypes-pri.m4 $(top_srcdir)/m4/inttypes.m4 \
	$(top_srcdir)/m4/inttypes_h.m4 $(top_srcdir)/m4/lcmessage.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/stdint_h.m4 \
	$(top_srcdir)/m4/uintmax_t.m4 $(top_srcdir)/m4/ulonglong.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = audacious.desktop
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" \
	"$(DESTDIR)$(beepincludedir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_audacious_OBJECTS = audacious-skin.$(OBJEXT) \
	audacious-util.$(OBJEXT) audacious-output.$(OBJEXT) \
	audacious-fft.$(OBJEXT) audacious-input.$(OBJEXT) \
	audacious-effect.$(OBJEXT) audacious-general.$(OBJEXT) \
	audacious-visualization.$(OBJEXT) \
	audacious-fullscreen.$(OBJEXT) audacious-pluginenum.$(OBJEXT) \
	audacious-playlist.$(OBJEXT) audacious-controlsocket.$(OBJEXT) \
	audacious-dock.$(OBJEXT) audacious-widget.$(OBJEXT) \
	audacious-sbutton.$(OBJEXT) audacious-pbutton.$(OBJEXT) \
	audacious-tbutton.$(OBJEXT) audacious-textbox.$(OBJEXT) \
	audacious-menurow.$(OBJEXT) audacious-hslider.$(OBJEXT) \
	audacious-monostereo.$(OBJEXT) audacious-vis.$(OBJEXT) \
	audacious-svis.$(OBJEXT) audacious-number.$(OBJEXT) \
	audacious-playback.$(OBJEXT) audacious-playstatus.$(OBJEXT) \
	audacious-playlist_list.$(OBJEXT) \
	audacious-playlist_slider.$(OBJEXT) \
	audacious-playlist_popup.$(OBJEXT) \
	audacious-eq_graph.$(OBJEXT) audacious-eq_slider.$(OBJEXT) \
	audacious-main.$(OBJEXT) audacious-logger.$(OBJEXT) \
	audacious-xml_document.$(OBJEXT) audacious-mainwin.$(OBJEXT) \
	audacious-skinwin.$(OBJEXT) audacious-prefswin.$(OBJEXT) \
	audacious-playlistwin.$(OBJEXT) audacious-equalizer.$(OBJEXT) \
	audacious-glade.$(OBJEXT) audacious-hints.$(OBJEXT) \
	audacious-about.$(OBJEXT) audacious-softvolume.$(OBJEXT) \
	audacious-getopt.$(OBJEXT) audacious-getopt1.$(OBJEXT) \
	audacious-urldecode.$(OBJEXT) audacious-mkdtemp.$(OBJEXT) \
	audacious-iir.$(OBJEXT)
audacious_OBJECTS = $(am_audacious_OBJECTS)
am__DEPENDENCIES_1 =
audacious_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/libaudacious/libaudacious.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(audacious_SOURCES)
DIST_SOURCES = $(audacious_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
desktopDATA_INSTALL = $(INSTALL_DATA)
DATA = $(desktop_DATA)
beepincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(beepinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARCH_DEFINES = @ARCH_DEFINES@
ARCH_X86_FALSE = @ARCH_X86_FALSE@
ARCH_X86_TRUE = @ARCH_X86_TRUE@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BEEP_DEFINES = @BEEP_DEFINES@
BEEP_PATH = @BEEP_PATH@
BMP_RCPATH = @BMP_RCPATH@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EFFECT_PLUGINS = @EFFECT_PLUGINS@
EFFECT_PLUGIN_DIR = @EFFECT_PLUGIN_DIR@
EGREP = @EGREP@
ENABLE_AAC_FALSE = @ENABLE_AAC_FALSE@
ENABLE_AAC_TRUE = @ENABLE_AAC_TRUE@
ENABLE_MPG123_FALSE = @ENABLE_MPG123_FALSE@
ENABLE_MPG123_TRUE = @ENABLE_MPG123_TRUE@
ESD_CFLAGS = @ESD_CFLAGS@
ESD_LIBS = @ESD_LIBS@
EXEEXT = @EXEEXT@
GCONF_CFLAGS = @GCONF_CFLAGS@
GCONF_LIBS = @GCONF_LIBS@
GENCAT = @GENCAT@
GENERAL_PLUGINS = @GENERAL_PLUGINS@
GENERAL_PLUGIN_DIR = @GENERAL_PLUGIN_DIR@
GLIBC21 = @GLIBC21@
GMSGFMT = @GMSGFMT@
GNOMEVFS_CFLAGS = @GNOMEVFS_CFLAGS@
GNOMEVFS_LIBS = @GNOMEVFS_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
HAVE_ALSA_FALSE = @HAVE_ALSA_FALSE@
HAVE_ALSA_TRUE = @HAVE_ALSA_TRUE@
HAVE_CDROM_FALSE = @HAVE_CDROM_FALSE@
HAVE_CDROM_TRUE = @HAVE_CDROM_TRUE@
HAVE_ESD_FALSE = @HAVE_ESD_FALSE@
HAVE_ESD_TRUE = @HAVE_ESD_TRUE@
HAVE_GCONF_FALSE = @HAVE_GCONF_FALSE@
HAVE_GCONF_TRUE = @HAVE_GCONF_TRUE@
HAVE_GNOME_VFS_FALSE = @HAVE_GNOME_VFS_FALSE@
HAVE_GNOME_VFS_TRUE = @HAVE_GNOME_VFS_TRUE@
HAVE_LIBVISUAL_FALSE = @HAVE_LIBVISUAL_FALSE@
HAVE_LIBVISUAL_TRUE = @HAVE_LIBVISUAL_TRUE@
HAVE_LINUX_JOYSTICK_FALSE = @HAVE_LINUX_JOYSTICK_FALSE@
HAVE_LINUX_JOYSTICK_TRUE = @HAVE_LINUX_JOYSTICK_TRUE@
HAVE_MIKMOD_FALSE = @HAVE_MIKMOD_FALSE@
HAVE_MIKMOD_TRUE = @HAVE_MIKMOD_TRUE@
HAVE_OGGVORBIS_FALSE = @HAVE_OGGVORBIS_FALSE@
HAVE_OGGVORBIS_TRUE = @HAVE_OGGVORBIS_TRUE@
HAVE_OSS_FALSE = @HAVE_OSS_FALSE@
HAVE_OSS_TRUE = @HAVE_OSS_TRUE@
HAVE_SOLARIS_FALSE = @HAVE_SOLARIS_FALSE@
HAVE_SOLARIS_TRUE = @HAVE_SOLARIS_TRUE@
HAVE_SUN_FALSE = @HAVE_SUN_FALSE@
HAVE_SUN_TRUE = @HAVE_SUN_TRUE@
ID3LIBS = @ID3LIBS@
INPUT_PLUGINS = @INPUT_PLUGINS@
INPUT_PLUGIN_DIR = @INPUT_PLUGIN_DIR@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLBISON = @INTLBISON@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@
LDFLAGS = @LDFLAGS@
LIBBEEP_MAJOR_VERSION = @LIBBEEP_MAJOR_VERSION@
LIBBEEP_MICRO_VERSION = @LIBBEEP_MICRO_VERSION@
LIBBEEP_MINOR_VERSION = @LIBBEEP_MINOR_VERSION@
LIBGLADE_CFLAGS = @LIBGLADE_CFLAGS@
LIBGLADE_LIBS = @LIBGLADE_LIBS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBMIKMOD_CFLAGS = @LIBMIKMOD_CFLAGS@
LIBMIKMOD_CONFIG = @LIBMIKMOD_CONFIG@
LIBMIKMOD_LDADD = @LIBMIKMOD_LDADD@
LIBMIKMOD_LIBS = @LIBMIKMOD_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBVISUAL_CFLAGS = @LIBVISUAL_CFLAGS@
LIBVISUAL_LIBS = @LIBVISUAL_LIBS@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
OGG_VORBIS_CFLAGS = @OGG_VORBIS_CFLAGS@
OGG_VORBIS_LIBS = @OGG_VORBIS_LIBS@
OUTPUT_PLUGINS = @OUTPUT_PLUGINS@
OUTPUT_PLUGIN_DIR = @OUTPUT_PLUGIN_DIR@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PC_REQUIRES = @PC_REQUIRES@
PKG_CONFIG = @PKG_CONFIG@
PLUGIN_LDFLAGS = @PLUGIN_LDFLAGS@
POSUB = @POSUB@
RANLIB = @RANLIB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
USE_SIMD_FALSE = @USE_SIMD_FALSE@
USE_SIMD_TRUE = @USE_SIMD_TRUE@
USE_X86ASM_FALSE = @USE_X86ASM_FALSE@
USE_X86ASM_TRUE = @USE_X86ASM_TRUE@
VERSION = @VERSION@
VISUALIZATION_PLUGINS = @VISUALIZATION_PLUGINS@
VISUALIZATION_PLUGIN_DIR = @VISUALIZATION_PLUGIN_DIR@
XGETTEXT = @XGETTEXT@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
beepdir = @beepdir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
plugindir = @plugindir@
pluginsubs = @pluginsubs@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
SUBDIRS = glade images
beepincludedir = $(includedir)/audacious
audacious_LDFLAGS = -export-dynamic
audacious_LDADD = \
	$(X_LIBS) $(X_PRE_LIBS) -lX11 $(X_EXTRA_LIBS) \
	$(GTK_LIBS)      \
	$(LIBGLADE_LIBS) \
	$(LTLIBINTL)     \
	$(top_builddir)/libaudacious/libaudacious.la

audacious_CFLAGS = \
	$(X_CFLAGS)        \
	$(GTK_CFLAGS)      \
	$(LIBGLADE_CFLAGS) \
	$(BEEP_DEFINES)    \
	$(ARCH_DEFINES)    \
	-I$(top_srcdir)    \
	-I$(top_srcdir)/intl

audacious_SOURCES = \
	skin.c skin.h \
	util.c util.h \
	output.c output.h \
	fft.c fft.h \
	input.c input.h \
	effect.c effect.h \
	general.c general.h \
	visualization.c visualization.h \
	fullscreen.c fullscreen.h \
	pluginenum.c pluginenum.h \
	playlist.c playlist.h \
	controlsocket.c controlsocket.h \
	dock.c dock.h \
	widget.c widget.h \
	sbutton.c sbutton.h \
	pbutton.c pbutton.h \
	tbutton.c tbutton.h \
	textbox.c textbox.h \
	menurow.c menurow.h \
	hslider.c hslider.h \
	monostereo.c monostereo.h \
	vis.c vis.h \
	svis.c svis.h \
	number.c number.h \
	playback.c playback.h \
	playstatus.c playstatus.h \
	playlist_list.c playlist_list.h \
	playlist_slider.c playlist_slider.h \
	playlist_popup.c playlist_popup.h \
	eq_graph.c eq_graph.h \
	eq_slider.c eq_slider.h \
	main.c main.h \
	logger.c logger.h \
	xml_document.c xml_document.h \
	mainwin.c mainwin.h \
	skinwin.c skinwin.h \
	prefswin.c prefswin.h \
	playlistwin.c playlistwin.h \
	equalizer.c equalizer.h \
	glade.c glade.h \
	hints.c hints.h \
	about.c about.h \
	plugin.h \
	softvolume.c softvolume.h \
	getopt.c getopt1.c getopt.h \
	urldecode.c urldecode.h \
	dnd.h \
	debug.h \
	mkdtemp.c \
	pixmaps.h \
	iir.c iir.h \
	na.xpm beep_logo.xpm

beepinclude_HEADERS = plugin.h fullscreen.h
desktop_DATA = audacious.desktop
desktopdir = $(datadir)/applications
BUILT_SOURCES = pixmaps.h
embedded_icons = \
	info.png playlist.png play.png

EXTRA_DIST = \
	$(embedded_icons) build.list

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  audacious/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  audacious/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
audacious.desktop: $(top_builddir)/config.status $(srcdir)/audacious.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
audacious$(EXEEXT): $(audacious_OBJECTS) $(audacious_DEPENDENCIES) 
	@rm -f audacious$(EXEEXT)
	$(LINK) $(audacious_LDFLAGS) $(audacious_OBJECTS) $(audacious_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-about.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-controlsocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-dock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-effect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-eq_graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-eq_slider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-equalizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-fft.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-fullscreen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-general.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-getopt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-getopt1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-glade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-hints.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-hslider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-iir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-logger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-mainwin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-menurow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-mkdtemp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-monostereo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-number.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-output.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-pbutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-playback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-playlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-playlist_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-playlist_popup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-playlist_slider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-playlistwin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-playstatus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-pluginenum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-prefswin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-sbutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-skin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-skinwin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-softvolume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-svis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-tbutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-textbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-urldecode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-vis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-visualization.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-widget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacious-xml_document.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

audacious-skin.o: skin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-skin.o -MD -MP -MF "$(DEPDIR)/audacious-skin.Tpo" -c -o audacious-skin.o `test -f 'skin.c' || echo '$(srcdir)/'`skin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-skin.Tpo" "$(DEPDIR)/audacious-skin.Po"; else rm -f "$(DEPDIR)/audacious-skin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='skin.c' object='audacious-skin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-skin.o `test -f 'skin.c' || echo '$(srcdir)/'`skin.c

audacious-skin.obj: skin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-skin.obj -MD -MP -MF "$(DEPDIR)/audacious-skin.Tpo" -c -o audacious-skin.obj `if test -f 'skin.c'; then $(CYGPATH_W) 'skin.c'; else $(CYGPATH_W) '$(srcdir)/skin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-skin.Tpo" "$(DEPDIR)/audacious-skin.Po"; else rm -f "$(DEPDIR)/audacious-skin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='skin.c' object='audacious-skin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-skin.obj `if test -f 'skin.c'; then $(CYGPATH_W) 'skin.c'; else $(CYGPATH_W) '$(srcdir)/skin.c'; fi`

audacious-util.o: util.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-util.o -MD -MP -MF "$(DEPDIR)/audacious-util.Tpo" -c -o audacious-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-util.Tpo" "$(DEPDIR)/audacious-util.Po"; else rm -f "$(DEPDIR)/audacious-util.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util.c' object='audacious-util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

audacious-util.obj: util.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-util.obj -MD -MP -MF "$(DEPDIR)/audacious-util.Tpo" -c -o audacious-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-util.Tpo" "$(DEPDIR)/audacious-util.Po"; else rm -f "$(DEPDIR)/audacious-util.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util.c' object='audacious-util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

audacious-output.o: output.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-output.o -MD -MP -MF "$(DEPDIR)/audacious-output.Tpo" -c -o audacious-output.o `test -f 'output.c' || echo '$(srcdir)/'`output.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-output.Tpo" "$(DEPDIR)/audacious-output.Po"; else rm -f "$(DEPDIR)/audacious-output.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='output.c' object='audacious-output.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-output.o `test -f 'output.c' || echo '$(srcdir)/'`output.c

audacious-output.obj: output.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-output.obj -MD -MP -MF "$(DEPDIR)/audacious-output.Tpo" -c -o audacious-output.obj `if test -f 'output.c'; then $(CYGPATH_W) 'output.c'; else $(CYGPATH_W) '$(srcdir)/output.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-output.Tpo" "$(DEPDIR)/audacious-output.Po"; else rm -f "$(DEPDIR)/audacious-output.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='output.c' object='audacious-output.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-output.obj `if test -f 'output.c'; then $(CYGPATH_W) 'output.c'; else $(CYGPATH_W) '$(srcdir)/output.c'; fi`

audacious-fft.o: fft.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-fft.o -MD -MP -MF "$(DEPDIR)/audacious-fft.Tpo" -c -o audacious-fft.o `test -f 'fft.c' || echo '$(srcdir)/'`fft.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-fft.Tpo" "$(DEPDIR)/audacious-fft.Po"; else rm -f "$(DEPDIR)/audacious-fft.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fft.c' object='audacious-fft.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-fft.o `test -f 'fft.c' || echo '$(srcdir)/'`fft.c

audacious-fft.obj: fft.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-fft.obj -MD -MP -MF "$(DEPDIR)/audacious-fft.Tpo" -c -o audacious-fft.obj `if test -f 'fft.c'; then $(CYGPATH_W) 'fft.c'; else $(CYGPATH_W) '$(srcdir)/fft.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-fft.Tpo" "$(DEPDIR)/audacious-fft.Po"; else rm -f "$(DEPDIR)/audacious-fft.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fft.c' object='audacious-fft.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-fft.obj `if test -f 'fft.c'; then $(CYGPATH_W) 'fft.c'; else $(CYGPATH_W) '$(srcdir)/fft.c'; fi`

audacious-input.o: input.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-input.o -MD -MP -MF "$(DEPDIR)/audacious-input.Tpo" -c -o audacious-input.o `test -f 'input.c' || echo '$(srcdir)/'`input.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-input.Tpo" "$(DEPDIR)/audacious-input.Po"; else rm -f "$(DEPDIR)/audacious-input.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='input.c' object='audacious-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-input.o `test -f 'input.c' || echo '$(srcdir)/'`input.c

audacious-input.obj: input.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-input.obj -MD -MP -MF "$(DEPDIR)/audacious-input.Tpo" -c -o audacious-input.obj `if test -f 'input.c'; then $(CYGPATH_W) 'input.c'; else $(CYGPATH_W) '$(srcdir)/input.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-input.Tpo" "$(DEPDIR)/audacious-input.Po"; else rm -f "$(DEPDIR)/audacious-input.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='input.c' object='audacious-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-input.obj `if test -f 'input.c'; then $(CYGPATH_W) 'input.c'; else $(CYGPATH_W) '$(srcdir)/input.c'; fi`

audacious-effect.o: effect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-effect.o -MD -MP -MF "$(DEPDIR)/audacious-effect.Tpo" -c -o audacious-effect.o `test -f 'effect.c' || echo '$(srcdir)/'`effect.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-effect.Tpo" "$(DEPDIR)/audacious-effect.Po"; else rm -f "$(DEPDIR)/audacious-effect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effect.c' object='audacious-effect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-effect.o `test -f 'effect.c' || echo '$(srcdir)/'`effect.c

audacious-effect.obj: effect.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-effect.obj -MD -MP -MF "$(DEPDIR)/audacious-effect.Tpo" -c -o audacious-effect.obj `if test -f 'effect.c'; then $(CYGPATH_W) 'effect.c'; else $(CYGPATH_W) '$(srcdir)/effect.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-effect.Tpo" "$(DEPDIR)/audacious-effect.Po"; else rm -f "$(DEPDIR)/audacious-effect.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='effect.c' object='audacious-effect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-effect.obj `if test -f 'effect.c'; then $(CYGPATH_W) 'effect.c'; else $(CYGPATH_W) '$(srcdir)/effect.c'; fi`

audacious-general.o: general.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-general.o -MD -MP -MF "$(DEPDIR)/audacious-general.Tpo" -c -o audacious-general.o `test -f 'general.c' || echo '$(srcdir)/'`general.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-general.Tpo" "$(DEPDIR)/audacious-general.Po"; else rm -f "$(DEPDIR)/audacious-general.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='general.c' object='audacious-general.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-general.o `test -f 'general.c' || echo '$(srcdir)/'`general.c

audacious-general.obj: general.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-general.obj -MD -MP -MF "$(DEPDIR)/audacious-general.Tpo" -c -o audacious-general.obj `if test -f 'general.c'; then $(CYGPATH_W) 'general.c'; else $(CYGPATH_W) '$(srcdir)/general.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-general.Tpo" "$(DEPDIR)/audacious-general.Po"; else rm -f "$(DEPDIR)/audacious-general.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='general.c' object='audacious-general.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-general.obj `if test -f 'general.c'; then $(CYGPATH_W) 'general.c'; else $(CYGPATH_W) '$(srcdir)/general.c'; fi`

audacious-visualization.o: visualization.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-visualization.o -MD -MP -MF "$(DEPDIR)/audacious-visualization.Tpo" -c -o audacious-visualization.o `test -f 'visualization.c' || echo '$(srcdir)/'`visualization.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-visualization.Tpo" "$(DEPDIR)/audacious-visualization.Po"; else rm -f "$(DEPDIR)/audacious-visualization.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='visualization.c' object='audacious-visualization.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-visualization.o `test -f 'visualization.c' || echo '$(srcdir)/'`visualization.c

audacious-visualization.obj: visualization.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-visualization.obj -MD -MP -MF "$(DEPDIR)/audacious-visualization.Tpo" -c -o audacious-visualization.obj `if test -f 'visualization.c'; then $(CYGPATH_W) 'visualization.c'; else $(CYGPATH_W) '$(srcdir)/visualization.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-visualization.Tpo" "$(DEPDIR)/audacious-visualization.Po"; else rm -f "$(DEPDIR)/audacious-visualization.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='visualization.c' object='audacious-visualization.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-visualization.obj `if test -f 'visualization.c'; then $(CYGPATH_W) 'visualization.c'; else $(CYGPATH_W) '$(srcdir)/visualization.c'; fi`

audacious-fullscreen.o: fullscreen.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-fullscreen.o -MD -MP -MF "$(DEPDIR)/audacious-fullscreen.Tpo" -c -o audacious-fullscreen.o `test -f 'fullscreen.c' || echo '$(srcdir)/'`fullscreen.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-fullscreen.Tpo" "$(DEPDIR)/audacious-fullscreen.Po"; else rm -f "$(DEPDIR)/audacious-fullscreen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fullscreen.c' object='audacious-fullscreen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-fullscreen.o `test -f 'fullscreen.c' || echo '$(srcdir)/'`fullscreen.c

audacious-fullscreen.obj: fullscreen.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-fullscreen.obj -MD -MP -MF "$(DEPDIR)/audacious-fullscreen.Tpo" -c -o audacious-fullscreen.obj `if test -f 'fullscreen.c'; then $(CYGPATH_W) 'fullscreen.c'; else $(CYGPATH_W) '$(srcdir)/fullscreen.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-fullscreen.Tpo" "$(DEPDIR)/audacious-fullscreen.Po"; else rm -f "$(DEPDIR)/audacious-fullscreen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='fullscreen.c' object='audacious-fullscreen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-fullscreen.obj `if test -f 'fullscreen.c'; then $(CYGPATH_W) 'fullscreen.c'; else $(CYGPATH_W) '$(srcdir)/fullscreen.c'; fi`

audacious-pluginenum.o: pluginenum.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-pluginenum.o -MD -MP -MF "$(DEPDIR)/audacious-pluginenum.Tpo" -c -o audacious-pluginenum.o `test -f 'pluginenum.c' || echo '$(srcdir)/'`pluginenum.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-pluginenum.Tpo" "$(DEPDIR)/audacious-pluginenum.Po"; else rm -f "$(DEPDIR)/audacious-pluginenum.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pluginenum.c' object='audacious-pluginenum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-pluginenum.o `test -f 'pluginenum.c' || echo '$(srcdir)/'`pluginenum.c

audacious-pluginenum.obj: pluginenum.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-pluginenum.obj -MD -MP -MF "$(DEPDIR)/audacious-pluginenum.Tpo" -c -o audacious-pluginenum.obj `if test -f 'pluginenum.c'; then $(CYGPATH_W) 'pluginenum.c'; else $(CYGPATH_W) '$(srcdir)/pluginenum.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-pluginenum.Tpo" "$(DEPDIR)/audacious-pluginenum.Po"; else rm -f "$(DEPDIR)/audacious-pluginenum.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pluginenum.c' object='audacious-pluginenum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-pluginenum.obj `if test -f 'pluginenum.c'; then $(CYGPATH_W) 'pluginenum.c'; else $(CYGPATH_W) '$(srcdir)/pluginenum.c'; fi`

audacious-playlist.o: playlist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist.o -MD -MP -MF "$(DEPDIR)/audacious-playlist.Tpo" -c -o audacious-playlist.o `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist.Tpo" "$(DEPDIR)/audacious-playlist.Po"; else rm -f "$(DEPDIR)/audacious-playlist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist.c' object='audacious-playlist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist.o `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c

audacious-playlist.obj: playlist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist.obj -MD -MP -MF "$(DEPDIR)/audacious-playlist.Tpo" -c -o audacious-playlist.obj `if test -f 'playlist.c'; then $(CYGPATH_W) 'playlist.c'; else $(CYGPATH_W) '$(srcdir)/playlist.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist.Tpo" "$(DEPDIR)/audacious-playlist.Po"; else rm -f "$(DEPDIR)/audacious-playlist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist.c' object='audacious-playlist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist.obj `if test -f 'playlist.c'; then $(CYGPATH_W) 'playlist.c'; else $(CYGPATH_W) '$(srcdir)/playlist.c'; fi`

audacious-controlsocket.o: controlsocket.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-controlsocket.o -MD -MP -MF "$(DEPDIR)/audacious-controlsocket.Tpo" -c -o audacious-controlsocket.o `test -f 'controlsocket.c' || echo '$(srcdir)/'`controlsocket.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-controlsocket.Tpo" "$(DEPDIR)/audacious-controlsocket.Po"; else rm -f "$(DEPDIR)/audacious-controlsocket.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='controlsocket.c' object='audacious-controlsocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-controlsocket.o `test -f 'controlsocket.c' || echo '$(srcdir)/'`controlsocket.c

audacious-controlsocket.obj: controlsocket.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-controlsocket.obj -MD -MP -MF "$(DEPDIR)/audacious-controlsocket.Tpo" -c -o audacious-controlsocket.obj `if test -f 'controlsocket.c'; then $(CYGPATH_W) 'controlsocket.c'; else $(CYGPATH_W) '$(srcdir)/controlsocket.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-controlsocket.Tpo" "$(DEPDIR)/audacious-controlsocket.Po"; else rm -f "$(DEPDIR)/audacious-controlsocket.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='controlsocket.c' object='audacious-controlsocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-controlsocket.obj `if test -f 'controlsocket.c'; then $(CYGPATH_W) 'controlsocket.c'; else $(CYGPATH_W) '$(srcdir)/controlsocket.c'; fi`

audacious-dock.o: dock.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-dock.o -MD -MP -MF "$(DEPDIR)/audacious-dock.Tpo" -c -o audacious-dock.o `test -f 'dock.c' || echo '$(srcdir)/'`dock.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-dock.Tpo" "$(DEPDIR)/audacious-dock.Po"; else rm -f "$(DEPDIR)/audacious-dock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dock.c' object='audacious-dock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-dock.o `test -f 'dock.c' || echo '$(srcdir)/'`dock.c

audacious-dock.obj: dock.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-dock.obj -MD -MP -MF "$(DEPDIR)/audacious-dock.Tpo" -c -o audacious-dock.obj `if test -f 'dock.c'; then $(CYGPATH_W) 'dock.c'; else $(CYGPATH_W) '$(srcdir)/dock.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-dock.Tpo" "$(DEPDIR)/audacious-dock.Po"; else rm -f "$(DEPDIR)/audacious-dock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dock.c' object='audacious-dock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-dock.obj `if test -f 'dock.c'; then $(CYGPATH_W) 'dock.c'; else $(CYGPATH_W) '$(srcdir)/dock.c'; fi`

audacious-widget.o: widget.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-widget.o -MD -MP -MF "$(DEPDIR)/audacious-widget.Tpo" -c -o audacious-widget.o `test -f 'widget.c' || echo '$(srcdir)/'`widget.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-widget.Tpo" "$(DEPDIR)/audacious-widget.Po"; else rm -f "$(DEPDIR)/audacious-widget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='widget.c' object='audacious-widget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-widget.o `test -f 'widget.c' || echo '$(srcdir)/'`widget.c

audacious-widget.obj: widget.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-widget.obj -MD -MP -MF "$(DEPDIR)/audacious-widget.Tpo" -c -o audacious-widget.obj `if test -f 'widget.c'; then $(CYGPATH_W) 'widget.c'; else $(CYGPATH_W) '$(srcdir)/widget.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-widget.Tpo" "$(DEPDIR)/audacious-widget.Po"; else rm -f "$(DEPDIR)/audacious-widget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='widget.c' object='audacious-widget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-widget.obj `if test -f 'widget.c'; then $(CYGPATH_W) 'widget.c'; else $(CYGPATH_W) '$(srcdir)/widget.c'; fi`

audacious-sbutton.o: sbutton.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-sbutton.o -MD -MP -MF "$(DEPDIR)/audacious-sbutton.Tpo" -c -o audacious-sbutton.o `test -f 'sbutton.c' || echo '$(srcdir)/'`sbutton.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-sbutton.Tpo" "$(DEPDIR)/audacious-sbutton.Po"; else rm -f "$(DEPDIR)/audacious-sbutton.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sbutton.c' object='audacious-sbutton.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-sbutton.o `test -f 'sbutton.c' || echo '$(srcdir)/'`sbutton.c

audacious-sbutton.obj: sbutton.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-sbutton.obj -MD -MP -MF "$(DEPDIR)/audacious-sbutton.Tpo" -c -o audacious-sbutton.obj `if test -f 'sbutton.c'; then $(CYGPATH_W) 'sbutton.c'; else $(CYGPATH_W) '$(srcdir)/sbutton.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-sbutton.Tpo" "$(DEPDIR)/audacious-sbutton.Po"; else rm -f "$(DEPDIR)/audacious-sbutton.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sbutton.c' object='audacious-sbutton.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-sbutton.obj `if test -f 'sbutton.c'; then $(CYGPATH_W) 'sbutton.c'; else $(CYGPATH_W) '$(srcdir)/sbutton.c'; fi`

audacious-pbutton.o: pbutton.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-pbutton.o -MD -MP -MF "$(DEPDIR)/audacious-pbutton.Tpo" -c -o audacious-pbutton.o `test -f 'pbutton.c' || echo '$(srcdir)/'`pbutton.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-pbutton.Tpo" "$(DEPDIR)/audacious-pbutton.Po"; else rm -f "$(DEPDIR)/audacious-pbutton.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pbutton.c' object='audacious-pbutton.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-pbutton.o `test -f 'pbutton.c' || echo '$(srcdir)/'`pbutton.c

audacious-pbutton.obj: pbutton.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-pbutton.obj -MD -MP -MF "$(DEPDIR)/audacious-pbutton.Tpo" -c -o audacious-pbutton.obj `if test -f 'pbutton.c'; then $(CYGPATH_W) 'pbutton.c'; else $(CYGPATH_W) '$(srcdir)/pbutton.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-pbutton.Tpo" "$(DEPDIR)/audacious-pbutton.Po"; else rm -f "$(DEPDIR)/audacious-pbutton.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pbutton.c' object='audacious-pbutton.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-pbutton.obj `if test -f 'pbutton.c'; then $(CYGPATH_W) 'pbutton.c'; else $(CYGPATH_W) '$(srcdir)/pbutton.c'; fi`

audacious-tbutton.o: tbutton.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-tbutton.o -MD -MP -MF "$(DEPDIR)/audacious-tbutton.Tpo" -c -o audacious-tbutton.o `test -f 'tbutton.c' || echo '$(srcdir)/'`tbutton.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-tbutton.Tpo" "$(DEPDIR)/audacious-tbutton.Po"; else rm -f "$(DEPDIR)/audacious-tbutton.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tbutton.c' object='audacious-tbutton.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-tbutton.o `test -f 'tbutton.c' || echo '$(srcdir)/'`tbutton.c

audacious-tbutton.obj: tbutton.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-tbutton.obj -MD -MP -MF "$(DEPDIR)/audacious-tbutton.Tpo" -c -o audacious-tbutton.obj `if test -f 'tbutton.c'; then $(CYGPATH_W) 'tbutton.c'; else $(CYGPATH_W) '$(srcdir)/tbutton.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-tbutton.Tpo" "$(DEPDIR)/audacious-tbutton.Po"; else rm -f "$(DEPDIR)/audacious-tbutton.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tbutton.c' object='audacious-tbutton.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-tbutton.obj `if test -f 'tbutton.c'; then $(CYGPATH_W) 'tbutton.c'; else $(CYGPATH_W) '$(srcdir)/tbutton.c'; fi`

audacious-textbox.o: textbox.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-textbox.o -MD -MP -MF "$(DEPDIR)/audacious-textbox.Tpo" -c -o audacious-textbox.o `test -f 'textbox.c' || echo '$(srcdir)/'`textbox.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-textbox.Tpo" "$(DEPDIR)/audacious-textbox.Po"; else rm -f "$(DEPDIR)/audacious-textbox.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='textbox.c' object='audacious-textbox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-textbox.o `test -f 'textbox.c' || echo '$(srcdir)/'`textbox.c

audacious-textbox.obj: textbox.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-textbox.obj -MD -MP -MF "$(DEPDIR)/audacious-textbox.Tpo" -c -o audacious-textbox.obj `if test -f 'textbox.c'; then $(CYGPATH_W) 'textbox.c'; else $(CYGPATH_W) '$(srcdir)/textbox.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-textbox.Tpo" "$(DEPDIR)/audacious-textbox.Po"; else rm -f "$(DEPDIR)/audacious-textbox.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='textbox.c' object='audacious-textbox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-textbox.obj `if test -f 'textbox.c'; then $(CYGPATH_W) 'textbox.c'; else $(CYGPATH_W) '$(srcdir)/textbox.c'; fi`

audacious-menurow.o: menurow.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-menurow.o -MD -MP -MF "$(DEPDIR)/audacious-menurow.Tpo" -c -o audacious-menurow.o `test -f 'menurow.c' || echo '$(srcdir)/'`menurow.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-menurow.Tpo" "$(DEPDIR)/audacious-menurow.Po"; else rm -f "$(DEPDIR)/audacious-menurow.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='menurow.c' object='audacious-menurow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-menurow.o `test -f 'menurow.c' || echo '$(srcdir)/'`menurow.c

audacious-menurow.obj: menurow.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-menurow.obj -MD -MP -MF "$(DEPDIR)/audacious-menurow.Tpo" -c -o audacious-menurow.obj `if test -f 'menurow.c'; then $(CYGPATH_W) 'menurow.c'; else $(CYGPATH_W) '$(srcdir)/menurow.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-menurow.Tpo" "$(DEPDIR)/audacious-menurow.Po"; else rm -f "$(DEPDIR)/audacious-menurow.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='menurow.c' object='audacious-menurow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-menurow.obj `if test -f 'menurow.c'; then $(CYGPATH_W) 'menurow.c'; else $(CYGPATH_W) '$(srcdir)/menurow.c'; fi`

audacious-hslider.o: hslider.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-hslider.o -MD -MP -MF "$(DEPDIR)/audacious-hslider.Tpo" -c -o audacious-hslider.o `test -f 'hslider.c' || echo '$(srcdir)/'`hslider.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-hslider.Tpo" "$(DEPDIR)/audacious-hslider.Po"; else rm -f "$(DEPDIR)/audacious-hslider.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='hslider.c' object='audacious-hslider.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-hslider.o `test -f 'hslider.c' || echo '$(srcdir)/'`hslider.c

audacious-hslider.obj: hslider.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-hslider.obj -MD -MP -MF "$(DEPDIR)/audacious-hslider.Tpo" -c -o audacious-hslider.obj `if test -f 'hslider.c'; then $(CYGPATH_W) 'hslider.c'; else $(CYGPATH_W) '$(srcdir)/hslider.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-hslider.Tpo" "$(DEPDIR)/audacious-hslider.Po"; else rm -f "$(DEPDIR)/audacious-hslider.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='hslider.c' object='audacious-hslider.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-hslider.obj `if test -f 'hslider.c'; then $(CYGPATH_W) 'hslider.c'; else $(CYGPATH_W) '$(srcdir)/hslider.c'; fi`

audacious-monostereo.o: monostereo.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-monostereo.o -MD -MP -MF "$(DEPDIR)/audacious-monostereo.Tpo" -c -o audacious-monostereo.o `test -f 'monostereo.c' || echo '$(srcdir)/'`monostereo.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-monostereo.Tpo" "$(DEPDIR)/audacious-monostereo.Po"; else rm -f "$(DEPDIR)/audacious-monostereo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='monostereo.c' object='audacious-monostereo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-monostereo.o `test -f 'monostereo.c' || echo '$(srcdir)/'`monostereo.c

audacious-monostereo.obj: monostereo.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-monostereo.obj -MD -MP -MF "$(DEPDIR)/audacious-monostereo.Tpo" -c -o audacious-monostereo.obj `if test -f 'monostereo.c'; then $(CYGPATH_W) 'monostereo.c'; else $(CYGPATH_W) '$(srcdir)/monostereo.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-monostereo.Tpo" "$(DEPDIR)/audacious-monostereo.Po"; else rm -f "$(DEPDIR)/audacious-monostereo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='monostereo.c' object='audacious-monostereo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-monostereo.obj `if test -f 'monostereo.c'; then $(CYGPATH_W) 'monostereo.c'; else $(CYGPATH_W) '$(srcdir)/monostereo.c'; fi`

audacious-vis.o: vis.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-vis.o -MD -MP -MF "$(DEPDIR)/audacious-vis.Tpo" -c -o audacious-vis.o `test -f 'vis.c' || echo '$(srcdir)/'`vis.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-vis.Tpo" "$(DEPDIR)/audacious-vis.Po"; else rm -f "$(DEPDIR)/audacious-vis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vis.c' object='audacious-vis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-vis.o `test -f 'vis.c' || echo '$(srcdir)/'`vis.c

audacious-vis.obj: vis.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-vis.obj -MD -MP -MF "$(DEPDIR)/audacious-vis.Tpo" -c -o audacious-vis.obj `if test -f 'vis.c'; then $(CYGPATH_W) 'vis.c'; else $(CYGPATH_W) '$(srcdir)/vis.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-vis.Tpo" "$(DEPDIR)/audacious-vis.Po"; else rm -f "$(DEPDIR)/audacious-vis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vis.c' object='audacious-vis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-vis.obj `if test -f 'vis.c'; then $(CYGPATH_W) 'vis.c'; else $(CYGPATH_W) '$(srcdir)/vis.c'; fi`

audacious-svis.o: svis.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-svis.o -MD -MP -MF "$(DEPDIR)/audacious-svis.Tpo" -c -o audacious-svis.o `test -f 'svis.c' || echo '$(srcdir)/'`svis.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-svis.Tpo" "$(DEPDIR)/audacious-svis.Po"; else rm -f "$(DEPDIR)/audacious-svis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='svis.c' object='audacious-svis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-svis.o `test -f 'svis.c' || echo '$(srcdir)/'`svis.c

audacious-svis.obj: svis.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-svis.obj -MD -MP -MF "$(DEPDIR)/audacious-svis.Tpo" -c -o audacious-svis.obj `if test -f 'svis.c'; then $(CYGPATH_W) 'svis.c'; else $(CYGPATH_W) '$(srcdir)/svis.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-svis.Tpo" "$(DEPDIR)/audacious-svis.Po"; else rm -f "$(DEPDIR)/audacious-svis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='svis.c' object='audacious-svis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-svis.obj `if test -f 'svis.c'; then $(CYGPATH_W) 'svis.c'; else $(CYGPATH_W) '$(srcdir)/svis.c'; fi`

audacious-number.o: number.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-number.o -MD -MP -MF "$(DEPDIR)/audacious-number.Tpo" -c -o audacious-number.o `test -f 'number.c' || echo '$(srcdir)/'`number.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-number.Tpo" "$(DEPDIR)/audacious-number.Po"; else rm -f "$(DEPDIR)/audacious-number.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='number.c' object='audacious-number.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-number.o `test -f 'number.c' || echo '$(srcdir)/'`number.c

audacious-number.obj: number.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-number.obj -MD -MP -MF "$(DEPDIR)/audacious-number.Tpo" -c -o audacious-number.obj `if test -f 'number.c'; then $(CYGPATH_W) 'number.c'; else $(CYGPATH_W) '$(srcdir)/number.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-number.Tpo" "$(DEPDIR)/audacious-number.Po"; else rm -f "$(DEPDIR)/audacious-number.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='number.c' object='audacious-number.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-number.obj `if test -f 'number.c'; then $(CYGPATH_W) 'number.c'; else $(CYGPATH_W) '$(srcdir)/number.c'; fi`

audacious-playback.o: playback.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playback.o -MD -MP -MF "$(DEPDIR)/audacious-playback.Tpo" -c -o audacious-playback.o `test -f 'playback.c' || echo '$(srcdir)/'`playback.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playback.Tpo" "$(DEPDIR)/audacious-playback.Po"; else rm -f "$(DEPDIR)/audacious-playback.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playback.c' object='audacious-playback.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playback.o `test -f 'playback.c' || echo '$(srcdir)/'`playback.c

audacious-playback.obj: playback.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playback.obj -MD -MP -MF "$(DEPDIR)/audacious-playback.Tpo" -c -o audacious-playback.obj `if test -f 'playback.c'; then $(CYGPATH_W) 'playback.c'; else $(CYGPATH_W) '$(srcdir)/playback.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playback.Tpo" "$(DEPDIR)/audacious-playback.Po"; else rm -f "$(DEPDIR)/audacious-playback.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playback.c' object='audacious-playback.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playback.obj `if test -f 'playback.c'; then $(CYGPATH_W) 'playback.c'; else $(CYGPATH_W) '$(srcdir)/playback.c'; fi`

audacious-playstatus.o: playstatus.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playstatus.o -MD -MP -MF "$(DEPDIR)/audacious-playstatus.Tpo" -c -o audacious-playstatus.o `test -f 'playstatus.c' || echo '$(srcdir)/'`playstatus.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playstatus.Tpo" "$(DEPDIR)/audacious-playstatus.Po"; else rm -f "$(DEPDIR)/audacious-playstatus.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playstatus.c' object='audacious-playstatus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playstatus.o `test -f 'playstatus.c' || echo '$(srcdir)/'`playstatus.c

audacious-playstatus.obj: playstatus.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playstatus.obj -MD -MP -MF "$(DEPDIR)/audacious-playstatus.Tpo" -c -o audacious-playstatus.obj `if test -f 'playstatus.c'; then $(CYGPATH_W) 'playstatus.c'; else $(CYGPATH_W) '$(srcdir)/playstatus.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playstatus.Tpo" "$(DEPDIR)/audacious-playstatus.Po"; else rm -f "$(DEPDIR)/audacious-playstatus.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playstatus.c' object='audacious-playstatus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playstatus.obj `if test -f 'playstatus.c'; then $(CYGPATH_W) 'playstatus.c'; else $(CYGPATH_W) '$(srcdir)/playstatus.c'; fi`

audacious-playlist_list.o: playlist_list.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist_list.o -MD -MP -MF "$(DEPDIR)/audacious-playlist_list.Tpo" -c -o audacious-playlist_list.o `test -f 'playlist_list.c' || echo '$(srcdir)/'`playlist_list.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist_list.Tpo" "$(DEPDIR)/audacious-playlist_list.Po"; else rm -f "$(DEPDIR)/audacious-playlist_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist_list.c' object='audacious-playlist_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist_list.o `test -f 'playlist_list.c' || echo '$(srcdir)/'`playlist_list.c

audacious-playlist_list.obj: playlist_list.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist_list.obj -MD -MP -MF "$(DEPDIR)/audacious-playlist_list.Tpo" -c -o audacious-playlist_list.obj `if test -f 'playlist_list.c'; then $(CYGPATH_W) 'playlist_list.c'; else $(CYGPATH_W) '$(srcdir)/playlist_list.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist_list.Tpo" "$(DEPDIR)/audacious-playlist_list.Po"; else rm -f "$(DEPDIR)/audacious-playlist_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist_list.c' object='audacious-playlist_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist_list.obj `if test -f 'playlist_list.c'; then $(CYGPATH_W) 'playlist_list.c'; else $(CYGPATH_W) '$(srcdir)/playlist_list.c'; fi`

audacious-playlist_slider.o: playlist_slider.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist_slider.o -MD -MP -MF "$(DEPDIR)/audacious-playlist_slider.Tpo" -c -o audacious-playlist_slider.o `test -f 'playlist_slider.c' || echo '$(srcdir)/'`playlist_slider.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist_slider.Tpo" "$(DEPDIR)/audacious-playlist_slider.Po"; else rm -f "$(DEPDIR)/audacious-playlist_slider.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist_slider.c' object='audacious-playlist_slider.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist_slider.o `test -f 'playlist_slider.c' || echo '$(srcdir)/'`playlist_slider.c

audacious-playlist_slider.obj: playlist_slider.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist_slider.obj -MD -MP -MF "$(DEPDIR)/audacious-playlist_slider.Tpo" -c -o audacious-playlist_slider.obj `if test -f 'playlist_slider.c'; then $(CYGPATH_W) 'playlist_slider.c'; else $(CYGPATH_W) '$(srcdir)/playlist_slider.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist_slider.Tpo" "$(DEPDIR)/audacious-playlist_slider.Po"; else rm -f "$(DEPDIR)/audacious-playlist_slider.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist_slider.c' object='audacious-playlist_slider.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist_slider.obj `if test -f 'playlist_slider.c'; then $(CYGPATH_W) 'playlist_slider.c'; else $(CYGPATH_W) '$(srcdir)/playlist_slider.c'; fi`

audacious-playlist_popup.o: playlist_popup.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist_popup.o -MD -MP -MF "$(DEPDIR)/audacious-playlist_popup.Tpo" -c -o audacious-playlist_popup.o `test -f 'playlist_popup.c' || echo '$(srcdir)/'`playlist_popup.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist_popup.Tpo" "$(DEPDIR)/audacious-playlist_popup.Po"; else rm -f "$(DEPDIR)/audacious-playlist_popup.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist_popup.c' object='audacious-playlist_popup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist_popup.o `test -f 'playlist_popup.c' || echo '$(srcdir)/'`playlist_popup.c

audacious-playlist_popup.obj: playlist_popup.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlist_popup.obj -MD -MP -MF "$(DEPDIR)/audacious-playlist_popup.Tpo" -c -o audacious-playlist_popup.obj `if test -f 'playlist_popup.c'; then $(CYGPATH_W) 'playlist_popup.c'; else $(CYGPATH_W) '$(srcdir)/playlist_popup.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlist_popup.Tpo" "$(DEPDIR)/audacious-playlist_popup.Po"; else rm -f "$(DEPDIR)/audacious-playlist_popup.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist_popup.c' object='audacious-playlist_popup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlist_popup.obj `if test -f 'playlist_popup.c'; then $(CYGPATH_W) 'playlist_popup.c'; else $(CYGPATH_W) '$(srcdir)/playlist_popup.c'; fi`

audacious-eq_graph.o: eq_graph.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-eq_graph.o -MD -MP -MF "$(DEPDIR)/audacious-eq_graph.Tpo" -c -o audacious-eq_graph.o `test -f 'eq_graph.c' || echo '$(srcdir)/'`eq_graph.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-eq_graph.Tpo" "$(DEPDIR)/audacious-eq_graph.Po"; else rm -f "$(DEPDIR)/audacious-eq_graph.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='eq_graph.c' object='audacious-eq_graph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-eq_graph.o `test -f 'eq_graph.c' || echo '$(srcdir)/'`eq_graph.c

audacious-eq_graph.obj: eq_graph.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-eq_graph.obj -MD -MP -MF "$(DEPDIR)/audacious-eq_graph.Tpo" -c -o audacious-eq_graph.obj `if test -f 'eq_graph.c'; then $(CYGPATH_W) 'eq_graph.c'; else $(CYGPATH_W) '$(srcdir)/eq_graph.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-eq_graph.Tpo" "$(DEPDIR)/audacious-eq_graph.Po"; else rm -f "$(DEPDIR)/audacious-eq_graph.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='eq_graph.c' object='audacious-eq_graph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-eq_graph.obj `if test -f 'eq_graph.c'; then $(CYGPATH_W) 'eq_graph.c'; else $(CYGPATH_W) '$(srcdir)/eq_graph.c'; fi`

audacious-eq_slider.o: eq_slider.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-eq_slider.o -MD -MP -MF "$(DEPDIR)/audacious-eq_slider.Tpo" -c -o audacious-eq_slider.o `test -f 'eq_slider.c' || echo '$(srcdir)/'`eq_slider.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-eq_slider.Tpo" "$(DEPDIR)/audacious-eq_slider.Po"; else rm -f "$(DEPDIR)/audacious-eq_slider.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='eq_slider.c' object='audacious-eq_slider.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-eq_slider.o `test -f 'eq_slider.c' || echo '$(srcdir)/'`eq_slider.c

audacious-eq_slider.obj: eq_slider.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-eq_slider.obj -MD -MP -MF "$(DEPDIR)/audacious-eq_slider.Tpo" -c -o audacious-eq_slider.obj `if test -f 'eq_slider.c'; then $(CYGPATH_W) 'eq_slider.c'; else $(CYGPATH_W) '$(srcdir)/eq_slider.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-eq_slider.Tpo" "$(DEPDIR)/audacious-eq_slider.Po"; else rm -f "$(DEPDIR)/audacious-eq_slider.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='eq_slider.c' object='audacious-eq_slider.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-eq_slider.obj `if test -f 'eq_slider.c'; then $(CYGPATH_W) 'eq_slider.c'; else $(CYGPATH_W) '$(srcdir)/eq_slider.c'; fi`

audacious-main.o: main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-main.o -MD -MP -MF "$(DEPDIR)/audacious-main.Tpo" -c -o audacious-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-main.Tpo" "$(DEPDIR)/audacious-main.Po"; else rm -f "$(DEPDIR)/audacious-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='main.c' object='audacious-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

audacious-main.obj: main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-main.obj -MD -MP -MF "$(DEPDIR)/audacious-main.Tpo" -c -o audacious-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-main.Tpo" "$(DEPDIR)/audacious-main.Po"; else rm -f "$(DEPDIR)/audacious-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='main.c' object='audacious-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

audacious-logger.o: logger.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-logger.o -MD -MP -MF "$(DEPDIR)/audacious-logger.Tpo" -c -o audacious-logger.o `test -f 'logger.c' || echo '$(srcdir)/'`logger.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-logger.Tpo" "$(DEPDIR)/audacious-logger.Po"; else rm -f "$(DEPDIR)/audacious-logger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='logger.c' object='audacious-logger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-logger.o `test -f 'logger.c' || echo '$(srcdir)/'`logger.c

audacious-logger.obj: logger.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-logger.obj -MD -MP -MF "$(DEPDIR)/audacious-logger.Tpo" -c -o audacious-logger.obj `if test -f 'logger.c'; then $(CYGPATH_W) 'logger.c'; else $(CYGPATH_W) '$(srcdir)/logger.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-logger.Tpo" "$(DEPDIR)/audacious-logger.Po"; else rm -f "$(DEPDIR)/audacious-logger.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='logger.c' object='audacious-logger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-logger.obj `if test -f 'logger.c'; then $(CYGPATH_W) 'logger.c'; else $(CYGPATH_W) '$(srcdir)/logger.c'; fi`

audacious-xml_document.o: xml_document.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-xml_document.o -MD -MP -MF "$(DEPDIR)/audacious-xml_document.Tpo" -c -o audacious-xml_document.o `test -f 'xml_document.c' || echo '$(srcdir)/'`xml_document.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-xml_document.Tpo" "$(DEPDIR)/audacious-xml_document.Po"; else rm -f "$(DEPDIR)/audacious-xml_document.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xml_document.c' object='audacious-xml_document.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-xml_document.o `test -f 'xml_document.c' || echo '$(srcdir)/'`xml_document.c

audacious-xml_document.obj: xml_document.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-xml_document.obj -MD -MP -MF "$(DEPDIR)/audacious-xml_document.Tpo" -c -o audacious-xml_document.obj `if test -f 'xml_document.c'; then $(CYGPATH_W) 'xml_document.c'; else $(CYGPATH_W) '$(srcdir)/xml_document.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-xml_document.Tpo" "$(DEPDIR)/audacious-xml_document.Po"; else rm -f "$(DEPDIR)/audacious-xml_document.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xml_document.c' object='audacious-xml_document.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-xml_document.obj `if test -f 'xml_document.c'; then $(CYGPATH_W) 'xml_document.c'; else $(CYGPATH_W) '$(srcdir)/xml_document.c'; fi`

audacious-mainwin.o: mainwin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-mainwin.o -MD -MP -MF "$(DEPDIR)/audacious-mainwin.Tpo" -c -o audacious-mainwin.o `test -f 'mainwin.c' || echo '$(srcdir)/'`mainwin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-mainwin.Tpo" "$(DEPDIR)/audacious-mainwin.Po"; else rm -f "$(DEPDIR)/audacious-mainwin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mainwin.c' object='audacious-mainwin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-mainwin.o `test -f 'mainwin.c' || echo '$(srcdir)/'`mainwin.c

audacious-mainwin.obj: mainwin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-mainwin.obj -MD -MP -MF "$(DEPDIR)/audacious-mainwin.Tpo" -c -o audacious-mainwin.obj `if test -f 'mainwin.c'; then $(CYGPATH_W) 'mainwin.c'; else $(CYGPATH_W) '$(srcdir)/mainwin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-mainwin.Tpo" "$(DEPDIR)/audacious-mainwin.Po"; else rm -f "$(DEPDIR)/audacious-mainwin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mainwin.c' object='audacious-mainwin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-mainwin.obj `if test -f 'mainwin.c'; then $(CYGPATH_W) 'mainwin.c'; else $(CYGPATH_W) '$(srcdir)/mainwin.c'; fi`

audacious-skinwin.o: skinwin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-skinwin.o -MD -MP -MF "$(DEPDIR)/audacious-skinwin.Tpo" -c -o audacious-skinwin.o `test -f 'skinwin.c' || echo '$(srcdir)/'`skinwin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-skinwin.Tpo" "$(DEPDIR)/audacious-skinwin.Po"; else rm -f "$(DEPDIR)/audacious-skinwin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='skinwin.c' object='audacious-skinwin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-skinwin.o `test -f 'skinwin.c' || echo '$(srcdir)/'`skinwin.c

audacious-skinwin.obj: skinwin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-skinwin.obj -MD -MP -MF "$(DEPDIR)/audacious-skinwin.Tpo" -c -o audacious-skinwin.obj `if test -f 'skinwin.c'; then $(CYGPATH_W) 'skinwin.c'; else $(CYGPATH_W) '$(srcdir)/skinwin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-skinwin.Tpo" "$(DEPDIR)/audacious-skinwin.Po"; else rm -f "$(DEPDIR)/audacious-skinwin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='skinwin.c' object='audacious-skinwin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-skinwin.obj `if test -f 'skinwin.c'; then $(CYGPATH_W) 'skinwin.c'; else $(CYGPATH_W) '$(srcdir)/skinwin.c'; fi`

audacious-prefswin.o: prefswin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-prefswin.o -MD -MP -MF "$(DEPDIR)/audacious-prefswin.Tpo" -c -o audacious-prefswin.o `test -f 'prefswin.c' || echo '$(srcdir)/'`prefswin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-prefswin.Tpo" "$(DEPDIR)/audacious-prefswin.Po"; else rm -f "$(DEPDIR)/audacious-prefswin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='prefswin.c' object='audacious-prefswin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-prefswin.o `test -f 'prefswin.c' || echo '$(srcdir)/'`prefswin.c

audacious-prefswin.obj: prefswin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-prefswin.obj -MD -MP -MF "$(DEPDIR)/audacious-prefswin.Tpo" -c -o audacious-prefswin.obj `if test -f 'prefswin.c'; then $(CYGPATH_W) 'prefswin.c'; else $(CYGPATH_W) '$(srcdir)/prefswin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-prefswin.Tpo" "$(DEPDIR)/audacious-prefswin.Po"; else rm -f "$(DEPDIR)/audacious-prefswin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='prefswin.c' object='audacious-prefswin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-prefswin.obj `if test -f 'prefswin.c'; then $(CYGPATH_W) 'prefswin.c'; else $(CYGPATH_W) '$(srcdir)/prefswin.c'; fi`

audacious-playlistwin.o: playlistwin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlistwin.o -MD -MP -MF "$(DEPDIR)/audacious-playlistwin.Tpo" -c -o audacious-playlistwin.o `test -f 'playlistwin.c' || echo '$(srcdir)/'`playlistwin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlistwin.Tpo" "$(DEPDIR)/audacious-playlistwin.Po"; else rm -f "$(DEPDIR)/audacious-playlistwin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlistwin.c' object='audacious-playlistwin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlistwin.o `test -f 'playlistwin.c' || echo '$(srcdir)/'`playlistwin.c

audacious-playlistwin.obj: playlistwin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-playlistwin.obj -MD -MP -MF "$(DEPDIR)/audacious-playlistwin.Tpo" -c -o audacious-playlistwin.obj `if test -f 'playlistwin.c'; then $(CYGPATH_W) 'playlistwin.c'; else $(CYGPATH_W) '$(srcdir)/playlistwin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-playlistwin.Tpo" "$(DEPDIR)/audacious-playlistwin.Po"; else rm -f "$(DEPDIR)/audacious-playlistwin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlistwin.c' object='audacious-playlistwin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-playlistwin.obj `if test -f 'playlistwin.c'; then $(CYGPATH_W) 'playlistwin.c'; else $(CYGPATH_W) '$(srcdir)/playlistwin.c'; fi`

audacious-equalizer.o: equalizer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-equalizer.o -MD -MP -MF "$(DEPDIR)/audacious-equalizer.Tpo" -c -o audacious-equalizer.o `test -f 'equalizer.c' || echo '$(srcdir)/'`equalizer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-equalizer.Tpo" "$(DEPDIR)/audacious-equalizer.Po"; else rm -f "$(DEPDIR)/audacious-equalizer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='equalizer.c' object='audacious-equalizer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-equalizer.o `test -f 'equalizer.c' || echo '$(srcdir)/'`equalizer.c

audacious-equalizer.obj: equalizer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-equalizer.obj -MD -MP -MF "$(DEPDIR)/audacious-equalizer.Tpo" -c -o audacious-equalizer.obj `if test -f 'equalizer.c'; then $(CYGPATH_W) 'equalizer.c'; else $(CYGPATH_W) '$(srcdir)/equalizer.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-equalizer.Tpo" "$(DEPDIR)/audacious-equalizer.Po"; else rm -f "$(DEPDIR)/audacious-equalizer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='equalizer.c' object='audacious-equalizer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-equalizer.obj `if test -f 'equalizer.c'; then $(CYGPATH_W) 'equalizer.c'; else $(CYGPATH_W) '$(srcdir)/equalizer.c'; fi`

audacious-glade.o: glade.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-glade.o -MD -MP -MF "$(DEPDIR)/audacious-glade.Tpo" -c -o audacious-glade.o `test -f 'glade.c' || echo '$(srcdir)/'`glade.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-glade.Tpo" "$(DEPDIR)/audacious-glade.Po"; else rm -f "$(DEPDIR)/audacious-glade.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='glade.c' object='audacious-glade.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-glade.o `test -f 'glade.c' || echo '$(srcdir)/'`glade.c

audacious-glade.obj: glade.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-glade.obj -MD -MP -MF "$(DEPDIR)/audacious-glade.Tpo" -c -o audacious-glade.obj `if test -f 'glade.c'; then $(CYGPATH_W) 'glade.c'; else $(CYGPATH_W) '$(srcdir)/glade.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-glade.Tpo" "$(DEPDIR)/audacious-glade.Po"; else rm -f "$(DEPDIR)/audacious-glade.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='glade.c' object='audacious-glade.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-glade.obj `if test -f 'glade.c'; then $(CYGPATH_W) 'glade.c'; else $(CYGPATH_W) '$(srcdir)/glade.c'; fi`

audacious-hints.o: hints.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-hints.o -MD -MP -MF "$(DEPDIR)/audacious-hints.Tpo" -c -o audacious-hints.o `test -f 'hints.c' || echo '$(srcdir)/'`hints.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-hints.Tpo" "$(DEPDIR)/audacious-hints.Po"; else rm -f "$(DEPDIR)/audacious-hints.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='hints.c' object='audacious-hints.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-hints.o `test -f 'hints.c' || echo '$(srcdir)/'`hints.c

audacious-hints.obj: hints.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-hints.obj -MD -MP -MF "$(DEPDIR)/audacious-hints.Tpo" -c -o audacious-hints.obj `if test -f 'hints.c'; then $(CYGPATH_W) 'hints.c'; else $(CYGPATH_W) '$(srcdir)/hints.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-hints.Tpo" "$(DEPDIR)/audacious-hints.Po"; else rm -f "$(DEPDIR)/audacious-hints.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='hints.c' object='audacious-hints.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-hints.obj `if test -f 'hints.c'; then $(CYGPATH_W) 'hints.c'; else $(CYGPATH_W) '$(srcdir)/hints.c'; fi`

audacious-about.o: about.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-about.o -MD -MP -MF "$(DEPDIR)/audacious-about.Tpo" -c -o audacious-about.o `test -f 'about.c' || echo '$(srcdir)/'`about.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-about.Tpo" "$(DEPDIR)/audacious-about.Po"; else rm -f "$(DEPDIR)/audacious-about.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='about.c' object='audacious-about.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-about.o `test -f 'about.c' || echo '$(srcdir)/'`about.c

audacious-about.obj: about.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-about.obj -MD -MP -MF "$(DEPDIR)/audacious-about.Tpo" -c -o audacious-about.obj `if test -f 'about.c'; then $(CYGPATH_W) 'about.c'; else $(CYGPATH_W) '$(srcdir)/about.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-about.Tpo" "$(DEPDIR)/audacious-about.Po"; else rm -f "$(DEPDIR)/audacious-about.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='about.c' object='audacious-about.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-about.obj `if test -f 'about.c'; then $(CYGPATH_W) 'about.c'; else $(CYGPATH_W) '$(srcdir)/about.c'; fi`

audacious-softvolume.o: softvolume.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-softvolume.o -MD -MP -MF "$(DEPDIR)/audacious-softvolume.Tpo" -c -o audacious-softvolume.o `test -f 'softvolume.c' || echo '$(srcdir)/'`softvolume.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-softvolume.Tpo" "$(DEPDIR)/audacious-softvolume.Po"; else rm -f "$(DEPDIR)/audacious-softvolume.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='softvolume.c' object='audacious-softvolume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-softvolume.o `test -f 'softvolume.c' || echo '$(srcdir)/'`softvolume.c

audacious-softvolume.obj: softvolume.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-softvolume.obj -MD -MP -MF "$(DEPDIR)/audacious-softvolume.Tpo" -c -o audacious-softvolume.obj `if test -f 'softvolume.c'; then $(CYGPATH_W) 'softvolume.c'; else $(CYGPATH_W) '$(srcdir)/softvolume.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-softvolume.Tpo" "$(DEPDIR)/audacious-softvolume.Po"; else rm -f "$(DEPDIR)/audacious-softvolume.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='softvolume.c' object='audacious-softvolume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-softvolume.obj `if test -f 'softvolume.c'; then $(CYGPATH_W) 'softvolume.c'; else $(CYGPATH_W) '$(srcdir)/softvolume.c'; fi`

audacious-getopt.o: getopt.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-getopt.o -MD -MP -MF "$(DEPDIR)/audacious-getopt.Tpo" -c -o audacious-getopt.o `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-getopt.Tpo" "$(DEPDIR)/audacious-getopt.Po"; else rm -f "$(DEPDIR)/audacious-getopt.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getopt.c' object='audacious-getopt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-getopt.o `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c

audacious-getopt.obj: getopt.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-getopt.obj -MD -MP -MF "$(DEPDIR)/audacious-getopt.Tpo" -c -o audacious-getopt.obj `if test -f 'getopt.c'; then $(CYGPATH_W) 'getopt.c'; else $(CYGPATH_W) '$(srcdir)/getopt.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-getopt.Tpo" "$(DEPDIR)/audacious-getopt.Po"; else rm -f "$(DEPDIR)/audacious-getopt.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getopt.c' object='audacious-getopt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-getopt.obj `if test -f 'getopt.c'; then $(CYGPATH_W) 'getopt.c'; else $(CYGPATH_W) '$(srcdir)/getopt.c'; fi`

audacious-getopt1.o: getopt1.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-getopt1.o -MD -MP -MF "$(DEPDIR)/audacious-getopt1.Tpo" -c -o audacious-getopt1.o `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-getopt1.Tpo" "$(DEPDIR)/audacious-getopt1.Po"; else rm -f "$(DEPDIR)/audacious-getopt1.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getopt1.c' object='audacious-getopt1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-getopt1.o `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c

audacious-getopt1.obj: getopt1.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-getopt1.obj -MD -MP -MF "$(DEPDIR)/audacious-getopt1.Tpo" -c -o audacious-getopt1.obj `if test -f 'getopt1.c'; then $(CYGPATH_W) 'getopt1.c'; else $(CYGPATH_W) '$(srcdir)/getopt1.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-getopt1.Tpo" "$(DEPDIR)/audacious-getopt1.Po"; else rm -f "$(DEPDIR)/audacious-getopt1.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getopt1.c' object='audacious-getopt1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-getopt1.obj `if test -f 'getopt1.c'; then $(CYGPATH_W) 'getopt1.c'; else $(CYGPATH_W) '$(srcdir)/getopt1.c'; fi`

audacious-urldecode.o: urldecode.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-urldecode.o -MD -MP -MF "$(DEPDIR)/audacious-urldecode.Tpo" -c -o audacious-urldecode.o `test -f 'urldecode.c' || echo '$(srcdir)/'`urldecode.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-urldecode.Tpo" "$(DEPDIR)/audacious-urldecode.Po"; else rm -f "$(DEPDIR)/audacious-urldecode.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='urldecode.c' object='audacious-urldecode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-urldecode.o `test -f 'urldecode.c' || echo '$(srcdir)/'`urldecode.c

audacious-urldecode.obj: urldecode.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-urldecode.obj -MD -MP -MF "$(DEPDIR)/audacious-urldecode.Tpo" -c -o audacious-urldecode.obj `if test -f 'urldecode.c'; then $(CYGPATH_W) 'urldecode.c'; else $(CYGPATH_W) '$(srcdir)/urldecode.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-urldecode.Tpo" "$(DEPDIR)/audacious-urldecode.Po"; else rm -f "$(DEPDIR)/audacious-urldecode.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='urldecode.c' object='audacious-urldecode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-urldecode.obj `if test -f 'urldecode.c'; then $(CYGPATH_W) 'urldecode.c'; else $(CYGPATH_W) '$(srcdir)/urldecode.c'; fi`

audacious-mkdtemp.o: mkdtemp.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-mkdtemp.o -MD -MP -MF "$(DEPDIR)/audacious-mkdtemp.Tpo" -c -o audacious-mkdtemp.o `test -f 'mkdtemp.c' || echo '$(srcdir)/'`mkdtemp.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-mkdtemp.Tpo" "$(DEPDIR)/audacious-mkdtemp.Po"; else rm -f "$(DEPDIR)/audacious-mkdtemp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mkdtemp.c' object='audacious-mkdtemp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-mkdtemp.o `test -f 'mkdtemp.c' || echo '$(srcdir)/'`mkdtemp.c

audacious-mkdtemp.obj: mkdtemp.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-mkdtemp.obj -MD -MP -MF "$(DEPDIR)/audacious-mkdtemp.Tpo" -c -o audacious-mkdtemp.obj `if test -f 'mkdtemp.c'; then $(CYGPATH_W) 'mkdtemp.c'; else $(CYGPATH_W) '$(srcdir)/mkdtemp.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-mkdtemp.Tpo" "$(DEPDIR)/audacious-mkdtemp.Po"; else rm -f "$(DEPDIR)/audacious-mkdtemp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mkdtemp.c' object='audacious-mkdtemp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-mkdtemp.obj `if test -f 'mkdtemp.c'; then $(CYGPATH_W) 'mkdtemp.c'; else $(CYGPATH_W) '$(srcdir)/mkdtemp.c'; fi`

audacious-iir.o: iir.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-iir.o -MD -MP -MF "$(DEPDIR)/audacious-iir.Tpo" -c -o audacious-iir.o `test -f 'iir.c' || echo '$(srcdir)/'`iir.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-iir.Tpo" "$(DEPDIR)/audacious-iir.Po"; else rm -f "$(DEPDIR)/audacious-iir.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='iir.c' object='audacious-iir.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-iir.o `test -f 'iir.c' || echo '$(srcdir)/'`iir.c

audacious-iir.obj: iir.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -MT audacious-iir.obj -MD -MP -MF "$(DEPDIR)/audacious-iir.Tpo" -c -o audacious-iir.obj `if test -f 'iir.c'; then $(CYGPATH_W) 'iir.c'; else $(CYGPATH_W) '$(srcdir)/iir.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/audacious-iir.Tpo" "$(DEPDIR)/audacious-iir.Po"; else rm -f "$(DEPDIR)/audacious-iir.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='iir.c' object='audacious-iir.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(audacious_CFLAGS) $(CFLAGS) -c -o audacious-iir.obj `if test -f 'iir.c'; then $(CYGPATH_W) 'iir.c'; else $(CYGPATH_W) '$(srcdir)/iir.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-desktopDATA: $(desktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(desktopdir)" || $(mkdir_p) "$(DESTDIR)$(desktopdir)"
	@list='$(desktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(desktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(desktopdir)/$$f'"; \
	  $(desktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(desktopdir)/$$f"; \
	done

uninstall-desktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(desktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(desktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(desktopdir)/$$f"; \
	done
install-beepincludeHEADERS: $(beepinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(beepincludedir)" || $(mkdir_p) "$(DESTDIR)$(beepincludedir)"
	@list='$(beepinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(beepincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(beepincludedir)/$$f'"; \
	  $(beepincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(beepincludedir)/$$f"; \
	done

uninstall-beepincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(beepinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(beepincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(beepincludedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" "$(DESTDIR)$(beepincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-beepincludeHEADERS install-desktopDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-beepincludeHEADERS uninstall-binPROGRAMS \
	uninstall-desktopDATA uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am \
	install-beepincludeHEADERS install-binPROGRAMS install-data \
	install-data-am install-desktopDATA install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-beepincludeHEADERS uninstall-binPROGRAMS \
	uninstall-desktopDATA uninstall-info-am


pixmaps.h: $(embedded_icons)
	gdk-pixbuf-csource --stream --build-list `cat build.list` > pixmaps.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
